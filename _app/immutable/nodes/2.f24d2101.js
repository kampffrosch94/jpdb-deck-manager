import{S as Ft,i as Ht,s as Vt,J as Jt,k as r,q as f,a as E,l as o,m as p,r as h,h as s,c as w,n as v,b as N,G as t,K as ee,L as z,u as je,M as ke,H as It,N as Mt,O as Ct,e as Bt}from"../chunks/index.b2c43475.js";function Dt(l,a,n){const i=l.slice();return i[33]=a[n],i}function qt(l,a,n){const i=l.slice();return i[33]=a[n],i}function At(l){let a,n,i,u=l[33].name+"",k,b,d,A,j,y,B,L=l[33].known_coverage.toFixed(1)+"",Y,O,q,J=l[33].learning_coverage.toFixed(1)+"",te,oe,G,R=l[33].is_built_in+"",le,se,C,ue;function Z(){return l[22](l[33])}return{c(){a=r("tr"),n=r("td"),i=r("a"),k=f(u),b=E(),d=r("a"),A=f("[jpdb]"),y=E(),B=r("td"),Y=f(L),O=E(),q=r("td"),te=f(J),oe=E(),G=r("td"),le=f(R),se=E(),this.h()},l(K){a=o(K,"TR",{class:!0});var g=p(a);n=o(g,"TD",{class:!0});var ne=p(n);i=o(ne,"A",{href:!0});var S=p(i);k=h(S,u),S.forEach(s),b=w(ne),d=o(ne,"A",{href:!0});var x=p(d);A=h(x,"[jpdb]"),x.forEach(s),ne.forEach(s),y=w(g),B=o(g,"TD",{class:!0});var re=p(B);Y=h(re,L),re.forEach(s),O=w(g),q=o(g,"TD",{class:!0});var fe=p(q);te=h(fe,J),fe.forEach(s),oe=w(g),G=o(g,"TD",{class:!0});var he=p(G);le=h(he,R),he.forEach(s),se=w(g),g.forEach(s),this.h()},h(){v(i,"href","#"),v(d,"href",j="https://jpdb.io/deck?id="+l[33].id),v(n,"class","svelte-15q9i7h"),v(B,"class","svelte-15q9i7h"),v(q,"class","svelte-15q9i7h"),v(G,"class","svelte-15q9i7h"),v(a,"class","svelte-15q9i7h")},m(K,g){N(K,a,g),t(a,n),t(n,i),t(i,k),t(n,b),t(n,d),t(d,A),t(a,y),t(a,B),t(B,Y),t(a,O),t(a,q),t(q,te),t(a,oe),t(a,G),t(G,le),t(a,se),C||(ue=z(i,"click",Z),C=!0)},p(K,g){l=K,g[0]&4&&u!==(u=l[33].name+"")&&je(k,u),g[0]&4&&j!==(j="https://jpdb.io/deck?id="+l[33].id)&&v(d,"href",j),g[0]&4&&L!==(L=l[33].known_coverage.toFixed(1)+"")&&je(Y,L),g[0]&4&&J!==(J=l[33].learning_coverage.toFixed(1)+"")&&je(te,J),g[0]&4&&R!==(R=l[33].is_built_in+"")&&je(le,R)},d(K){K&&s(a),C=!1,ue()}}}function Lt(l){let a,n=l[33].known_coverage>l[3]&&l[33].learning_coverage>l[4]&&(l[33].is_built_in||!l[5])&&At(l);return{c(){n&&n.c(),a=Bt()},l(i){n&&n.l(i),a=Bt()},m(i,u){n&&n.m(i,u),N(i,a,u)},p(i,u){i[33].known_coverage>i[3]&&i[33].learning_coverage>i[4]&&(i[33].is_built_in||!i[5])?n?n.p(i,u):(n=At(i),n.c(),n.m(a.parentNode,a)):n&&(n.d(1),n=null)},d(i){n&&n.d(i),i&&s(a)}}}function Ot(l){let a,n=l[33].name+"",i;return{c(){a=r("p"),i=f(n)},l(u){a=o(u,"P",{});var k=p(a);i=h(k,n),k.forEach(s)},m(u,k){N(u,a,k),t(a,i)},p(u,k){k[0]&64&&n!==(n=u[33].name+"")&&je(i,n)},d(u){u&&s(a)}}}function Rt(l){let a,n,i,u,k;return{c(){a=r("p"),n=f(`min decks:
                `),i=r("input"),this.h()},l(b){a=o(b,"P",{});var d=p(a);n=h(d,`min decks:
                `),i=o(d,"INPUT",{type:!0}),d.forEach(s),this.h()},h(){v(i,"type","number")},m(b,d){N(b,a,d),t(a,n),t(a,i),ee(i,l[9]),u||(k=z(i,"input",l[30]),u=!0)},p(b,d){d[0]&512&&ke(i.value)!==b[9]&&ee(i,b[9])},d(b){b&&s(a),u=!1,k()}}}function Ut(l){let a,n,i=l[11].name+"",u,k,b,d,A;return{c(){a=r("p"),n=f(`Last created:
                `),u=f(i),k=E(),b=r("a"),d=f("[jpdb]"),this.h()},l(j){a=o(j,"P",{});var y=p(a);n=h(y,`Last created:
                `),u=h(y,i),k=w(y),b=o(y,"A",{href:!0});var B=p(b);d=h(B,"[jpdb]"),B.forEach(s),y.forEach(s),this.h()},h(){v(b,"href",A="https://jpdb.io/deck?id="+l[11].id)},m(j,y){N(j,a,y),t(a,n),t(a,u),t(a,k),t(a,b),t(b,d)},p(j,y){y[0]&2048&&i!==(i=j[11].name+"")&&je(u,i),y[0]&2048&&A!==(A="https://jpdb.io/deck?id="+j[11].id)&&v(b,"href",A)},d(j){j&&s(a)}}}function zt(l){let a,n,i,u,k,b,d,A,j,y,B,L,Y,O,q,J,te,oe,G,R,le,se,C,ue,Z,K,g,ne,S,x,re,fe,he,ie,$,m,I,P,M,ae,ce,me,qe,Je,Ae,Ce,ze,Ge,T,Le,Ke,Se,Qe,We,Oe,ye,Xe,Ye,Pe,Ze,pe,$e,Ne,xe,de,et,_e,ge,Q,tt,lt,Ee,W,nt,it,we,X,at,st,Re,Ie,rt,ot,ut,ct,bt,Me=l[2],U=[];for(let e=0;e<Me.length;e+=1)U[e]=Lt(qt(l,Me,e));let Be=l[6],F=[];for(let e=0;e<Be.length;e+=1)F[e]=Ot(Dt(l,Be,e));let H=l[10]==l[12].BijakMerge&&Rt(l),V=l[11]!=null&&Ut(l);return ut=Jt(l[27][0]),{c(){a=r("p"),n=f("Put your API Token here (from the bottom of "),i=r("a"),u=f("jpdb.io/settings"),k=f("), it won't get send anywhere except jpdb.io. Don't share it with anyone!"),b=E(),d=r("input"),A=E(),j=r("button"),y=f("Ping"),B=E(),L=r("p"),Y=f("Result:"),O=E(),q=r("pre"),J=f("    "),te=f(l[1]),oe=f(`
`),G=E(),R=r("button"),le=f("Fetch user decks"),se=f(`
Min coverage:
`),C=r("input"),ue=f(`
Min learning coverage:
`),Z=r("input"),K=f(`
Filter builtin:
`),g=r("input"),ne=E(),S=r("div"),x=r("div"),re=r("h3"),fe=f("Decklist"),he=E(),ie=r("table"),$=r("tr"),m=r("th"),I=f("name"),P=E(),M=r("th"),ae=f("coverage"),ce=E(),me=r("th"),qe=f("learning coverage"),Je=E(),Ae=r("th"),Ce=f("is_built_in"),ze=E();for(let e=0;e<U.length;e+=1)U[e].c();Ge=E(),T=r("div"),Le=r("h3"),Ke=f("Deckmerger"),Se=f(`
        selected decks:`),Qe=r("br"),We=E();for(let e=0;e<F.length;e+=1)F[e].c();Oe=E(),ye=r("button"),Xe=f("Reset selection"),Ye=E(),Pe=r("p"),Ze=f(`Name of new deck
            `),pe=r("input"),$e=E(),Ne=r("p"),xe=f(`min occurences:
            `),de=r("input"),et=E(),_e=r("p"),ge=r("label"),Q=r("input"),tt=f(`
                Merge`),lt=E(),Ee=r("label"),W=r("input"),nt=f(`
                Intersect`),it=E(),we=r("label"),X=r("input"),at=f(`
                BijakMerge`),st=E(),H&&H.c(),Re=E(),Ie=r("button"),rt=f("create deck"),ot=E(),V&&V.c(),this.h()},l(e){a=o(e,"P",{});var c=p(a);n=h(c,"Put your API Token here (from the bottom of "),i=o(c,"A",{href:!0});var _=p(i);u=h(_,"jpdb.io/settings"),_.forEach(s),k=h(c,"), it won't get send anywhere except jpdb.io. Don't share it with anyone!"),c.forEach(s),b=w(e),d=o(e,"INPUT",{type:!0}),A=w(e),j=o(e,"BUTTON",{type:!0});var ve=p(j);y=h(ve,"Ping"),ve.forEach(s),B=w(e),L=o(e,"P",{});var kt=p(L);Y=h(kt,"Result:"),kt.forEach(s),O=w(e),q=o(e,"PRE",{});var Ue=p(q);J=h(Ue,"    "),te=h(Ue,l[1]),oe=h(Ue,`
`),Ue.forEach(s),G=w(e),R=o(e,"BUTTON",{type:!0});var mt=p(R);le=h(mt,"Fetch user decks"),mt.forEach(s),se=h(e,`
Min coverage:
`),C=o(e,"INPUT",{type:!0}),ue=h(e,`
Min learning coverage:
`),Z=o(e,"INPUT",{type:!0}),K=h(e,`
Filter builtin:
`),g=o(e,"INPUT",{type:!0}),ne=w(e),S=o(e,"DIV",{class:!0});var Fe=p(S);x=o(Fe,"DIV",{});var He=p(x);re=o(He,"H3",{});var gt=p(re);fe=h(gt,"Decklist"),gt.forEach(s),he=w(He),ie=o(He,"TABLE",{class:!0});var Ve=p(ie);$=o(Ve,"TR",{class:!0});var be=p($);m=o(be,"TH",{});var Et=p(m);I=h(Et,"name"),Et.forEach(s),P=w(be),M=o(be,"TH",{});var wt=p(M);ae=h(wt,"coverage"),wt.forEach(s),ce=w(be),me=o(be,"TH",{});var Tt=p(me);qe=h(Tt,"learning coverage"),Tt.forEach(s),Je=w(be),Ae=o(be,"TH",{});var jt=p(Ae);Ce=h(jt,"is_built_in"),jt.forEach(s),be.forEach(s),ze=w(Ve);for(let Te=0;Te<U.length;Te+=1)U[Te].l(Ve);Ve.forEach(s),He.forEach(s),Ge=w(Fe),T=o(Fe,"DIV",{id:!0});var D=p(T);Le=o(D,"H3",{});var yt=p(Le);Ke=h(yt,"Deckmerger"),yt.forEach(s),Se=h(D,`
        selected decks:`),Qe=o(D,"BR",{}),We=w(D);for(let Te=0;Te<F.length;Te+=1)F[Te].l(D);Oe=w(D),ye=o(D,"BUTTON",{});var Pt=p(ye);Xe=h(Pt,"Reset selection"),Pt.forEach(s),Ye=w(D),Pe=o(D,"P",{});var _t=p(Pe);Ze=h(_t,`Name of new deck
            `),pe=o(_t,"INPUT",{type:!0}),_t.forEach(s),$e=w(D),Ne=o(D,"P",{});var ft=p(Ne);xe=h(ft,`min occurences:
            `),de=o(ft,"INPUT",{type:!0}),ft.forEach(s),et=w(D),_e=o(D,"P",{});var De=p(_e);ge=o(De,"LABEL",{title:!0});var ht=p(ge);Q=o(ht,"INPUT",{type:!0,name:!0}),tt=h(ht,`
                Merge`),ht.forEach(s),lt=w(De),Ee=o(De,"LABEL",{title:!0});var pt=p(Ee);W=o(pt,"INPUT",{type:!0,name:!0}),nt=h(pt,`
                Intersect`),pt.forEach(s),it=w(De),we=o(De,"LABEL",{title:!0});var dt=p(we);X=o(dt,"INPUT",{type:!0,name:!0}),at=h(dt,`
                BijakMerge`),dt.forEach(s),De.forEach(s),st=w(D),H&&H.l(D),Re=w(D),Ie=o(D,"BUTTON",{});var Nt=p(Ie);rt=h(Nt,"create deck"),Nt.forEach(s),ot=w(D),V&&V.l(D),D.forEach(s),Fe.forEach(s),this.h()},h(){v(i,"href","https://jpdb.io/settings"),v(d,"type","password"),v(j,"type","button"),v(R,"type","button"),v(C,"type","number"),v(Z,"type","number"),v(g,"type","checkbox"),v($,"class","svelte-15q9i7h"),v(ie,"class","svelte-15q9i7h"),v(pe,"type","text"),v(de,"type","number"),v(Q,"type","radio"),v(Q,"name","strat"),Q.__value=l[12].Merge,Q.value=Q.__value,v(ge,"title","Merges decks into new deck, adds up all vocab occurences, then removes all vocab where occurences < min_occurences"),v(W,"type","radio"),v(W,"name","strat"),W.__value=l[12].Intersect,W.value=W.__value,v(Ee,"title","Only adds those words into the new deck that appear in all decks. Then removes all where occurences < min_occurences"),v(X,"type","radio"),v(X,"name","strat"),X.__value=l[12].BijakMerge,X.value=X.__value,v(we,"title","The BijakMerge (named after its inventor) works just like the regular merge, but also needs a minimum number of decks for a word to appear in for it to be included."),v(T,"id","deckmerger_div"),v(S,"class","container svelte-15q9i7h"),ut.p(Q,W,X)},m(e,c){N(e,a,c),t(a,n),t(a,i),t(i,u),t(a,k),N(e,b,c),N(e,d,c),ee(d,l[0]),N(e,A,c),N(e,j,c),t(j,y),N(e,B,c),N(e,L,c),t(L,Y),N(e,O,c),N(e,q,c),t(q,J),t(q,te),t(q,oe),N(e,G,c),N(e,R,c),t(R,le),N(e,se,c),N(e,C,c),ee(C,l[3]),N(e,ue,c),N(e,Z,c),ee(Z,l[4]),N(e,K,c),N(e,g,c),g.checked=l[5],N(e,ne,c),N(e,S,c),t(S,x),t(x,re),t(re,fe),t(x,he),t(x,ie),t(ie,$),t($,m),t(m,I),t($,P),t($,M),t(M,ae),t($,ce),t($,me),t(me,qe),t($,Je),t($,Ae),t(Ae,Ce),t(ie,ze);for(let _=0;_<U.length;_+=1)U[_]&&U[_].m(ie,null);t(S,Ge),t(S,T),t(T,Le),t(Le,Ke),t(T,Se),t(T,Qe),t(T,We);for(let _=0;_<F.length;_+=1)F[_]&&F[_].m(T,null);t(T,Oe),t(T,ye),t(ye,Xe),t(T,Ye),t(T,Pe),t(Pe,Ze),t(Pe,pe),ee(pe,l[7]),t(T,$e),t(T,Ne),t(Ne,xe),t(Ne,de),ee(de,l[8]),t(T,et),t(T,_e),t(_e,ge),t(ge,Q),Q.checked=Q.__value===l[10],t(ge,tt),t(_e,lt),t(_e,Ee),t(Ee,W),W.checked=W.__value===l[10],t(Ee,nt),t(_e,it),t(_e,we),t(we,X),X.checked=X.__value===l[10],t(we,at),t(T,st),H&&H.m(T,null),t(T,Re),t(T,Ie),t(Ie,rt),t(T,ot),V&&V.m(T,null),ct||(bt=[z(d,"input",l[18]),z(j,"click",l[13]),z(R,"click",l[14]),z(C,"input",l[19]),z(Z,"input",l[20]),z(g,"change",l[21]),z(ye,"click",l[23]),z(pe,"input",l[24]),z(de,"input",l[25]),z(Q,"change",l[26]),z(W,"change",l[28]),z(X,"change",l[29]),z(Ie,"click",l[31])],ct=!0)},p(e,c){if(c[0]&1&&d.value!==e[0]&&ee(d,e[0]),c[0]&2&&je(te,e[1]),c[0]&8&&ke(C.value)!==e[3]&&ee(C,e[3]),c[0]&16&&ke(Z.value)!==e[4]&&ee(Z,e[4]),c[0]&32&&(g.checked=e[5]),c[0]&124){Me=e[2];let _;for(_=0;_<Me.length;_+=1){const ve=qt(e,Me,_);U[_]?U[_].p(ve,c):(U[_]=Lt(ve),U[_].c(),U[_].m(ie,null))}for(;_<U.length;_+=1)U[_].d(1);U.length=Me.length}if(c[0]&64){Be=e[6];let _;for(_=0;_<Be.length;_+=1){const ve=Dt(e,Be,_);F[_]?F[_].p(ve,c):(F[_]=Ot(ve),F[_].c(),F[_].m(T,Oe))}for(;_<F.length;_+=1)F[_].d(1);F.length=Be.length}c[0]&128&&pe.value!==e[7]&&ee(pe,e[7]),c[0]&256&&ke(de.value)!==e[8]&&ee(de,e[8]),c[0]&1024&&(Q.checked=Q.__value===e[10]),c[0]&1024&&(W.checked=W.__value===e[10]),c[0]&1024&&(X.checked=X.__value===e[10]),e[10]==e[12].BijakMerge?H?H.p(e,c):(H=Rt(e),H.c(),H.m(T,Re)):H&&(H.d(1),H=null),e[11]!=null?V?V.p(e,c):(V=Ut(e),V.c(),V.m(T,null)):V&&(V.d(1),V=null)},i:It,o:It,d(e){e&&s(a),e&&s(b),e&&s(d),e&&s(A),e&&s(j),e&&s(B),e&&s(L),e&&s(O),e&&s(q),e&&s(G),e&&s(R),e&&s(se),e&&s(C),e&&s(ue),e&&s(Z),e&&s(K),e&&s(g),e&&s(ne),e&&s(S),Mt(U,e),Mt(F,e),H&&H.d(),V&&V.d(),ut.r(),ct=!1,Ct(bt)}}}function vt(l,a){const n=[];for(const i of l)for(const u of i){const k=n.find(b=>b.vid===u.vid&&b.sid===u.sid);k!=null?(k.occurences+=u.occurences,k.decks+=1):n.push({decks:1,...u})}return n.filter(i=>i.decks>=a)}function Gt(l,a,n){var i=(m=>(m[m.Merge=0]="Merge",m[m.Intersect=1]="Intersect",m[m.BijakMerge=2]="BijakMerge",m))(i||{});let u="",k="",b=[],d=80,A=80,j=!1,y=[],B="",L=1,Y=1,O=0,q=null;async function J(m,I){let P=new Headers;return P.set("Authorization","Bearer "+u),P.set("Content-Type","application/json"),await fetch("https://jpdb.io/api/v1/"+m,{headers:P,method:"POST",body:JSON.stringify(I)})}async function te(){const I=await(await J("ping",{})).json();n(1,k=JSON.stringify(I))}async function oe(){const I=await(await J("list-user-decks",{fields:["name","vocabulary_known_coverage","vocabulary_in_progress_coverage","is_built_in","id"]})).json();n(2,b=I.decks.map(P=>{let[M,ae,ce,me,qe]=P;return{name:M,id:qe,known_coverage:ae,learning_coverage:ce,is_built_in:me}})),b.sort((P,M)=>P.name.localeCompare(M.name))}async function G(m){const I=await(await J("deck/list-vocabulary",{id:m.id,fetch_occurences:!0})).json();let P=[];for(let M=0;M<I.vocabulary.length;M++){let ae={vid:I.vocabulary[M][0],sid:I.vocabulary[M][1],occurences:I.occurences[M]};P.push(ae)}return{vocabs:P,...m}}async function R(m,I){let P=[],M=[];I.forEach(ce=>{P.push([ce.vid,ce.sid]),M.push(ce.occurences)});const ae=await(await J("deck/add-vocabulary",{id:m,vocabulary:P,occurences:M})).json();n(1,k=JSON.stringify(ae))}async function le(m){return(await(await J("deck/create-empty",{name:m})).json()).id}const se=[[]];function C(){u=this.value,n(0,u)}function ue(){d=ke(this.value),n(3,d)}function Z(){A=ke(this.value),n(4,A)}function K(){j=this.checked,n(5,j)}const g=m=>{y.push(m),n(6,y)},ne=()=>{n(6,y=[])};function S(){B=this.value,n(7,B)}function x(){L=ke(this.value),n(8,L)}function re(){O=this.__value,n(10,O)}function fe(){O=this.__value,n(10,O)}function he(){O=this.__value,n(10,O)}function ie(){Y=ke(this.value),n(9,Y)}return[u,k,b,d,A,j,y,B,L,Y,O,q,i,te,oe,G,R,le,C,ue,Z,K,g,ne,S,x,re,se,fe,he,ie,async()=>{if(B!==""){n(11,q=null);const m=await le(B),I=[];for(const M of y){const ae=await G(M);I.push(ae.vocabs)}let P;switch(O){case i.Merge:P=vt(I,1);break;case i.Intersect:P=vt(I,I.length);break;case i.BijakMerge:P=vt(I,Y);break}P=P.filter(M=>M.occurences>=L),await R(m,P),n(11,q={id:m,name:B})}}]}class St extends Ft{constructor(a){super(),Ht(this,a,Gt,zt,Vt,{},null,[-1,-1])}}export{St as component};
